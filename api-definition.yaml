openapi: 3.0.0
servers:
  - url: //${ZKSYNC_SERVER_ADDRESS}/v2
    description: Default server
info:
  description: |


    **Please note: some of the data on this page is documented twice: in markdown to satisfy the requirements of the assignment (converting a table to markdown, specifying the request type), then from an openapi-generated document that was written ad hoc.**

    # Introduction


    This is a sample API definition of Zksync's V2 API., it covers a specific endpoint:

    ```
    /users/transactions?module={account}&address={address}
    ```

      This endpoint enables  a common use-case: looking up transactions sent by a given address.

      The path takes `{module_name}` as a `string` parameter to determine which module to interact with, it also takes `{address}` as a `string` parameter   and returns transactions sent by this address.

      If you only need a subset of these transactions, the endpoint exposes the `startblock` and `endblock` parameters, which represent the period when transactions should be included. i.e. `startblock=30` and `endblock=60` will only return transactions sent by an address between block 30 and block 60.

      You can optionally control the output by setting the number of transactions displayed per page with  the `offset` param, sort the output by ascending and descending order (`asc` and `desc` parameters) and decide what page should be displayed with the `page` param.

    ## Authentication

    The authentication scheme is undefined at this time.

    ## Base path

    | Host     | Base Path    |
    |--------------|----------------|
    | `https://${ZKSYNC_SERVER_ADDRESS}` | `/api/v2`   |

    ### Example URI

    ```bash
    https://api.zksync.io/v2/users/transactions
    ?module=account
    &address=0xc679HDJH9HHJI098a3CC98sjskjjks
    &startblock=5
    &endblock=10
    &page=1
    &offset=5
    &sort=desc
    ```


    ### Request type

    This endpoint accepts `GET` requests.

    ### URI Parameters

    | Query string parameter |Data type | Optional|  Default| Description |
    |------------------------|----|-------|----------|------|
    | `module_name`    | String    | Required | `account` | Represents the module to call. |
    | `address`    | String    | Required| `null` | Represents the addresses to check for transactions. |
    | `startblock` | Integer   | Optional | `0`|  First block from which to return transactions. |
    | `endblock`   | Integer   | Optional | `Latest block` | Last block from which to return transactions. |
    | `offset`     | Integer   | Optional | `5` |Sets the number of transactions displayed per page. |
    | `sort`       | String    | Optional | `asc` |Sorts transactions by ascending (use `asc`) or descending order (use `desc`). |
    | `page`       | Integer   | Optional | `1` |The integer page number if pagination is enabled. |


  version: 1.0.0
  title: "Zksync API v2"
  contact:
    name: Zsync Support
  license:
    name: MIT
tags:
  - name: Transactions
    description: the following is generated from an openapi reference

  - name: transaction_model
    x-displayName: Transaction Model ( API Response )
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Transaction" />
x-tagGroups:
  - name: Transaction management
    tags:
      - Transactions
  - name: Models
    tags:
      - transaction_model
paths:
  /users/transactions?module=account&address={address}:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US"
        example: en-US
        required: false
        schema:
          type: string
          default: en-AU
    get:
      tags:
        - Transactions
      summary: Find transactions by address
      description: Returns a list of transactions sent by a given address
      operationId: Transactions
      parameters:
        - name: Content-type
          in: header
          description: "The type of data returned by Zsync API v2
          example: application/json"
          required: false
          schema:
          type: string
          default: en-AU
        - name: address
          in: path
          description: Address of transaction to return
          required: true
          deprecated: false
          schema:
            type: string
        - name: startblock
          in: path
          description: Block from which to start returning transactions
          required: false
          deprecated: false
          schema:
            type: integer
            format: int64
        - name: endblock
          in: path
          description: Block from which to stop returning transactions
          required: false
          deprecated: false
          schema:
            type: integer
            format: int64
        - name: offset
          in: path
          description: Number of transactions displayed per page
          required: false
          deprecated: false
          schema:
            type: integer
            format: int64
        - name: sort
          in: path
          description: Sorting preference, use `asc` to sort by ascending order and `desc` to sort by descending.
          required: false
          deprecated: false
          schema:
            type: string
        - name: page
          in: path
          description: The integer page number if pagination is enabled.
          required: false
          deprecated: false
          schema:
            type: integer
            format: int64
      x-codeSamples:
        - lang: 'cURL'
          source: |
            curl -XGET
            -H 'module: account'
            -H 'address: 0xc679HDJH9HHJI098a3CC98sjskjjks
            -H 'startblock: 0'
            -H 'endblock: 100000'
            -H 'page: 1'
            -H 'offset: 5'
            -H 'sort: desc'
            -H "Content-type: application/json"
            'https://api.zksync.io/v2/users/transactions/' | json_pp
        - lang: Javascript
          source: |
              async function getData(url = '') {
                await fetch(url, {
                  method: 'GET',
                  mode: 'cors',
                  cache: 'no-cache',
                  credentials: 'same-origin',
                  headers: {
                    'Content-Type': 'application/json'
                  },
                })
                  .then((response) => response.json())
                  .then((data) => console.log(data))
                  .catch((error) => {
                    console.error('Error:', error);
                  });
              }
              getData('https://api.zksync.io/v2/users/transactions\?module\=account\&address\=0xc679HDJH9HHJI098a3CC98sjskjjks\&startblock\=0\&endblock\=100000\&page\=1\&offset\=5\&sort\=desc');
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid ID supplied
        '404':
          description: transaction not found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Hash:
      type: string
      readOnly: true
      example: 1424388a45de738bae3175734bfdd8bb36abc8c31b2608018172574e8b7e38e2
    prover_run:
      type: object
      description: Low-level details on proving job for the block containing the transaction
      properties:
        id:
          type: integer
        block_number:
          description: Block where transaction belongs
          type: integer
          format: int64
          example: 3072
        worker:
          description:
          type: string
          example: prover-76ccd5db5d-d959v
        created_at:
          description: Date of proof creation
          type: string
          format: date-time
        updated_at:
          description: Date of proof update
          type: string
          format: date-time
    Address:
      type: string
      readOnly: true
    Transaction:
      type: object
      properties:
        tx_hash:
          description: Hexadecimal string representation of transaction hash
          allOf:
            - $ref: '#/components/schemas/Hash'
        block_number:
          description: Block where transaction belongs
          type: integer
          example: 3072
        success:
          description: Indicates if the execution was successful
          type: boolean
          example: true
        verified:
          description: Whether block with this transaction was already verified
          type: boolean
          example: true
        fail_reason:
          description: If transaction was rejected, this field will contain the description of an error
          type: string | null
          example: null
        prover_run:
          allOf:
            - $ref: '#/components/schemas/prover_run'
      xml:
        name: Transaction
  securitySchemes:
    transactionstore_auth:
      description: |
        Get access to data while protecting your account credentials.
        OAuth2 is also a safer and more secure way to give you access.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://transactionstore.swagger.io/api/oauth/dialog'
          scopes:
            'write:transactions': modify transactions in your account
            'read:transactions': read your transactions
    api_key:
      description: >
        For this sample, you can use the api key `special-key` to test the
        authorization filters.
      type: apiKey
      name: api_key
      in: header
  examples:
    Order:
      value:
        quantity: 1
        shipDate: '2018-10-19T16:46:45Z'
        status: placed
        complete: false
